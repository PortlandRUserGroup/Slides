\SweaveOpts{eps=FALSE}
\documentclass{beamer}

% This file is a solution template for:

% - Giving a talk on some subject.
% - The talk is between 15min and 45min long.
% - Style is ornate.



% Copyright 2004 by Till Tantau <tantau@users.sourceforge.net>.
%
% In principle, this file can be redistributed and/or modified under
% the terms of the GNU Public License, version 2.
%
% However, this file is supposed to be a template to be modified
% for your own needs. For this reason, if you use this file as a
% template and not specifically distribute it as part of a another
% package/program, I grant the extra permission to freely copy and
% modify this file as you see fit and even to delete this copyright
% notice.


\mode<presentation>
{
  \usetheme{JuanLesPins}
  % or ...

  \setbeamercovered{transparent}
  % or whatever (possibly just delete it)
}


%\usepackage[english]{babel}
% or whatever

%\usepackage[latin1]{inputenc}
% or whatever

%\usepackage{times}
%\usepackage[T1]{fontenc}
% Or whatever. Note that the encoding and the font should match. If T1
% does not look nice, try deleting the line with the fontenc.


\title{Making graphs with ggplot2}

\author{Brian Diggs}
% - Use the \inst{?} command only if the authors have different
%   affiliation.

\institute[OHSU] % (optional, but mostly needed)
{
  Department of Surgery\\
  Oregon Health \& Science University
}
\date[PRUG] % (optional)
{January 20, 2011 / Portland R User Group}


% If you have a file called "university-logo-filename.xxx", where xxx
% is a graphic format that can be processed by latex or pdflatex,
% resp., then you can add a logo as follows:

%\pgfdeclareimage[height=0.5cm]{university-logo}{OHSU_H_4C_POS_RGB}
%\logo{\pgfuseimage{university-logo}}



% Delete this, if you do not want the table of contents to pop up at
% the beginning of each subsection:
% \AtBeginSubsection[]
% {
%   \begin{frame}<beamer>{Outline}
%     \tableofcontents[currentsection,currentsubsection]
%   \end{frame}
% }


% If you wish to uncover everything in a step-wise fashion, uncomment
% the following command:

%\beamerdefaultoverlayspecification{<+->}


\begin{document}

\begin{frame}
  \titlepage
\end{frame}

\begin{frame}{Outline}
  \tableofcontents
  % You might wish to add the option [pausesections]
\end{frame}


<<echo=FALSE>>=
options(width = 30)
library("ggplot2")
@

\section{Background and Philosophy}
\label{sec:backgr-phil}

\subsection{Statistical Graphics}
\label{sec:statistical-graphics}

\begin{frame}
  \begin{columns}
    \column[t]{.5\textwidth}
    Designed for statistical or data graphics: where quantities of the
    data are represented by position, shape, color, etc.
    \column[t]{.5\textwidth}
    Not designed for
    \begin{itemize}
    \item Organization charts
    \item Flow charts
    \item Infographics
    \item Posters
    \end{itemize}
  \end{columns}
\end{frame}

\subsection{Philosophical Structure}
\label{sec:phil-struct}

\begin{frame}{Philosophical Structure}
  \begin{itemize}
  \item Data in a data.frame in ``long'' format
  \item Columns of data are mapped to aesthetics
  \item Non-data related aspects controlled by theme
  \end{itemize}
\end{frame}

\begin{frame}[containsverbatim]{Data in long format}
  data.frame with an entry for each measurement and the variables
  associated with describing the circumstances of that measurement
<<>>=
str(warpbreaks)
@

\end{frame}

\begin{frame}{Aesthetics}
  \begin{itemize}
  \item Examples
    \begin{itemize}
    \item Position along an axis
    \item Shape
    \item Color
    \item Width
    \item Line type
    \item Replicate (horizontal and/or vertical)
    \end{itemize}
  \item Legend is mapping between visual element and the data values
  \item Any aesthetic can be fixed to a specific (non-data) value
  \end{itemize}
\end{frame}

\begin{frame}{Themes}
  Themes control non-data related aspects of the graphic
  \begin{itemize}
  \item Size of title
  \item Font of tick lables
  \item Location of legend
  \item Background colors
  \end{itemize}

\end{frame}

\section{Elements of the Grammer}
\label{sec:elements-grammer}

\subsection{Initializer}
\label{sec:initializer}

\begin{frame}{qplot vs. ggplot}
  Two ways to start making a plot
  \begin{itemize}
  \item qplot
    \begin{itemize}
    \item Designed to be like plot
    \item Eases transition
    \item Obscures details
    \end{itemize}
  \item ggplot
    \begin{itemize}
    \item Core of the actual grammer
    \item Less familiar
    \end{itemize}
  \end{itemize}

\end{frame}

\begin{frame}[containsverbatim]{ggplot}
  Arguments
  \begin{description}
  \item[data] Default data.frame of the data to be plotted
  \item[mapping] Default aesthetic mappings
  \end{description}

<<eval=FALSE>>=
ggplot(warpbreaks)
@
% fake the output
\begin{Soutput}
Error: No layers in plot
\end{Soutput}

Incomplete by itself
\end{frame}

\subsection{Geoms}
\label{sec:geoms}

\begin{frame}{Geoms}
  Geoms are the different ways that ``ink'' is used to show the values
  \begin{itemize}
  \item Points
  \item Lines connecting points/locations
  \item Steps connecting points/locations
  \item Bars
  \item Points with lines extending from them (error bars)
  \item Tiles/rectangles
  \item Ribbons
  \item Text
  \end{itemize}
\end{frame}

\begin{frame}{Required and optional aesthetics}
  \begin{tabular}{l|p{1.5in}|p{1.5in}}
    Geom & Required & Optional \\ \hline
    point & x, y (positions) & shape, colour, size, fill, alpha \\
    rect & xmin, xmax, ymin, ymax & colour, fill, size, linetype,
    alpha \\
    text & x, y, label & colour, size, angle, hjust, vjust, alpha \\ \hline
  \end{tabular}

  Aesthetics are specified by calls to the aes function with arguments
  that are aesthetic name and the variable being mapped to it.

\end{frame}
\begin{frame}[containsverbatim]{Examples of geoms}
  cw is a subset of the ChickWeight data.frame in datasets
<<echo=FALSE>>=
cw <- ChickWeight[ChickWeight$Chick==1 & ChickWeight$Diet==1,]
@
<<geom1, eval=FALSE>>=
ggplot(cw) + geom_point(aes(x=Time, y=weight))
@
<<geom2, eval=FALSE>>=
ggplot(cw) + geom_line(aes(x=Time, y=weight))
@
<<geom3, eval=FALSE>>=
ggplot(cw) + geom_path(aes(x=Time, y=weight))
@
<<geom4, eval=FALSE>>=
ggplot(cw) + geom_step(aes(x=Time, y=weight))
@
\end{frame}

\begin{frame}{Examples of geoms (results)}
  \begin{columns}
    \column{0.4\textwidth}
    geom\_point
<<geom1out, echo=FALSE, fig=TRUE, width=3, height=2>>=
print(
<<geom1>>
      )
@

geom\_path
<<geom3out, echo=FALSE, fig=TRUE, width=3, height=2>>=
print(
<<geom3>>
      )
@
    \column{0.4\textwidth}

    geom\_line
<<geom2out, echo=FALSE, fig=TRUE, width=3, height=2>>=
print(
<<geom2>>
      )
@

geom\_step
<<geom4out, echo=FALSE, fig=TRUE, width=3, height=2>>=
print(
<<geom4>>
      )
@
  \end{columns}
\end{frame}

\begin{frame}[containsverbatim]{Optional aesthetics}
  cw2 is a broader subset of ChicWeight
<<echo=FALSE>>=
cw2 <- ddply(ChickWeight, .(Diet), function(d) {d[d$Chick==d$Chick[1],]})
@
<<geom5, eval=FALSE>>=
ggplot(cw2) + geom_line(aes(x=Time, y=weight, colour=Diet))
@
<<geom6, eval=FALSE>>=
ggplot(cw2) + geom_point(aes(x=Time, y=weight, shape=Diet))
@
\end{frame}

\begin{frame}{Optional aesthetics (results)}
\begin{columns}
\column{0.5\textwidth}
<<geom5out, echo=FALSE, fig=TRUE, width=4, height=3>>=
print(
<<geom5>>
      )
@
\column{0.5\textwidth}
<<geom6out, echo=FALSE, fig=TRUE, width=4, height=3>>=
print(
<<geom6>>
      )
@

\end{columns}
\end{frame}

\subsection{Layers}
\label{sec:layers}

\begin{frame}[containsverbatim]{Layers}
  Much of the flexibility comes from being able to combine different
  geoms in layers
<<layer1, eval=FALSE>>=
ggplot(cw2) + geom_point(aes(x=Time, y=weight, colour=Diet, shape=Diet)) + geom_line(aes(x=Time, y=weight, colour=Diet))
@
\end{frame}

\begin{frame}
<<layer1out, echo=FALSE, fig=TRUE, width=8, height=5>>=
print(
<<layer1>>
      )
@
\end{frame}

\begin{frame}[containsverbatim]{Default aesthetics}
  Multiple geoms using the same set of aesthetics show the utility of
  default aesthetics
<<layer1b, eval=FALSE>>=
ggplot(cw2, aes(x=Time, y=weight, colour=Diet)) + geom_point(aes(shape=Diet)) + geom_line()
@


\end{frame}
\subsection{Scales}
\label{sec:scales}
\begin{frame}{Aesthetics vs. scales}
  \begin{itemize}
  \item   Aesthetics define which variable is associated with a property
  \item Scales define
    \begin{itemize}
    \item Which particular color/shape/etc. is associated with which
      data value
    \item Which data values are part of the graph
    \item How the data values are displayed in the legend
    \item How the legend is titled
    \end{itemize}
  \end{itemize}
\end{frame}

\begin{frame}
  \begin{itemize}
  \item Previous example had 4 scales
    \begin{itemize}
    \item x position
    \item y position
    \item colour
    \item shape
    \end{itemize}
  \item Note that even though both the points and lines used colour,
    there is just one common scale for both
  \item In this case
    \begin{itemize}
    \item both positions are continuous
    \item colour and shape are discrete
    \end{itemize}
  \end{itemize}
\end{frame}

\begin{frame}[containsverbatim]
<<scale1, eval=FALSE>>=

ggplot(cw2, aes(x=Time, y=weight, colour=Diet)) +
    geom_point(aes(shape=Diet)) +
    geom_line() +
    scale_x_continuous( "Time (in days)", breaks = c(0,10,20)) +
    scale_y_continuous( "Weight (in grams)", limits = c(0,350)) +
    scale_colour_manual( breaks = 1:4, values = c("blue","red","green","yellow"), legend = FALSE) +
    scale_shape( breaks = 1:4, labels = c("alpha","beta","gamma","delta"))

@

\end{frame}

\begin{frame}
<<scale1out, echo=FALSE, fig=TRUE, width=8, height=5>>=
print(
<<scale1>>
      )
@
\end{frame}

\subsection{Facets}
\label{sec:facets}

\begin{frame}[containsverbatim]
  Facets, or small multiples, are sets of graphs showing subsets of
  data on common x and/or y axes for comparison purposes

<<facet1, eval=FALSE>>=

ggplot(ChickWeight, aes(x=Time, y=weight, group=Chick)) +
    geom_line() +
    facet_wrap(~Diet)

@
\end{frame}

\begin{frame}
<<facet1out, echo=FALSE, fig=TRUE, width=8, height=5>>=
print(
<<facet1>>
      )
@
\end{frame}

\subsection{Groups}
\label{sec:groups}

\begin{frame}
  \begin{itemize}
  \item By default, a separate group is created for each combination
    of categorical (factor or character) variables that are mapped to aesthetics
  \item Can be overridden with the group aesthetic
  \item Many things done on a one-per-group basis (line, path, ribbon, stat)
  \end{itemize}
\end{frame}

\subsection{Stats}
\label{sec:stats}

\begin{frame}
  \begin{itemize}
  \item Transformation (summarization) of data by group
    \begin{itemize}
    \item Binning (1 or 2 dimensional)
    \item Quartiles
    \item Mean and standard deviation
    \item Smoothing/regression
    \end{itemize}
  \item Results of the transformations are mapped to aesthetics
  \end{itemize}
\end{frame}

\begin{frame}[containsverbatim]
<<stat1, eval=FALSE>>=

ggplot(ChickWeight, aes(x=Time, y=weight, group=Chick)) +
    geom_line() +
    stat_smooth(method="lm") +
    facet_wrap(~Diet)

@
\end{frame}

\begin{frame}
<<stat1out, echo=FALSE, fig=TRUE, width=8, height=5>>=
print(
<<stat1>>
      )
@
\end{frame}
\begin{frame}[containsverbatim]
<<stat2, eval=FALSE>>=

ggplot(ChickWeight, aes(x=Time, y=weight, group=Chick)) +
    geom_line() +
    stat_smooth(aes(group=Diet), method="lm") +
    facet_wrap(~Diet)

@
\end{frame}
\begin{frame}
<<stat2out, echo=FALSE, fig=TRUE, width=8, height=5>>=
print(
<<stat2>>
      )
@
\end{frame}
\begin{frame}[containsverbatim]

<<stat3, eval=FALSE>>=

ggplot(ChickWeight, aes(x=Time, y=weight, group=Chick)) +
    stat_smooth(method="lm") +
    stat_smooth(aes(group=Diet), method="lm", colour="red", size=3) +
    facet_wrap(~Diet)

@
\end{frame}
\begin{frame}
<<stat3out, echo=FALSE, fig=TRUE, width=8, height=5>>=
print(
<<stat3>>
      )
@
\end{frame}
\begin{frame}

\end{frame}
\end{document}


